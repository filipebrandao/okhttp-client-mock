plugins {
    id 'java'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.dcendents.android-maven' version '1.5'
}

repositories {
    jcenter()
    maven { url 'https://maven.google.com' }
}

group = 'com.github.filipebrandao'
version = '0.1'
sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compileOnly 'org.robolectric:robolectric:3.4.2'
    compileOnly 'com.android.support:support-annotations:25.3.1'
    compileOnly 'com.google.android:android:2.2.1'

    testCompile configurations.compileOnly
    testCompile 'junit:junit:4.12'
}

def repoDesc = 'A simple OKHttp client mock, using a programmable request interceptor Edit'
def repoName = 'okhttp-client-mock'
def repoUrl = "https://github.com/filipebrandao/$repoName"
def repoTags = ['okhttp', 'mock', 'retrofit', 'test']

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = repoName
        desc = repoDesc
        vcsUrl = "${repoUrl}.git"
        githubRepo = repoUrl.replaceFirst('\\Qhttps://github.com/\\E', '');
        githubReleaseNotesFile = 'README.md'
        licenses = ['MIT']
        labels = repoTags
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                name repoDesc
                url repoUrl
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
